server.port=8090

customer.name=spring-${server.port}

spring.zipkin.base-url=http://zipkin:9411/
spring.sleuth.sampler.probability=1.0
spring.zipkin.sender.type=web

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.output.ansi.enabled=ALWAYS

feign.client.config.default.connect-timeout=500
feign.client.config.default.read-timeout=500

resilience4j.circuitbreaker.backends.order.failure-rate-threshold=50
#设置失败率阈值  失败超过50% 就需要去做一个断路
resilience4j.circuitbreaker.backends.order.wait-duration-in-open-state=5000
#打开状态的等待时间
resilience4j.circuitbreaker.backends.order.ring-buffer-size-in-closed-state=5
#关闭状态下的环形缓冲区大小
resilience4j.circuitbreaker.backends.order.ring-buffer-size-in-half-open-state=3
#环形缓冲区大小在半开状态
resilience4j.circuitbreaker.backends.order.event-consumer-buffer-size=10
#事件消费者缓冲区大小

resilience4j.circuitbreaker.backends.menu.failure-rate-threshold=50
resilience4j.circuitbreaker.backends.menu.wait-duration-in-open-state=5000
resilience4j.circuitbreaker.backends.menu.ring-buffer-size-in-closed-state=5
resilience4j.circuitbreaker.backends.menu.ring-buffer-size-in-half-open-state=3
resilience4j.circuitbreaker.backends.menu.event-consumer-buffer-size=10

resilience4j.bulkhead.backends.order.max-concurrent-call=1
#最大并发调用数量
resilience4j.bulkhead.backends.order.max-wait-time=5
#最大等待时间

resilience4j.bulkhead.backends.menu.max-concurrent-call=5
#最大并发调用数量
resilience4j.bulkhead.backends.menu.max-wait-time=5
#最大等待时间

spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=spring
spring.rabbitmq.password=spring
#rabbitmq相关配置

spring.cloud.stream.rabbit.bindings.notifyOrders.consumer.binding-routing-key=${customer.name}